#!/bin/bash
#
# distributes all checks in the ACROS tree
# the checks will arrive in a global yaml file containing all checks for that particular site/farm
#
#################### Redis DB ####################
# NIF  --- redis-cli -h 10.3.14.38  -p 12006 -n 10
# PROD --- redis-cli -h 10.3.8.133  -p 12006 -n 10
# SLIV --- redis-cli -h 10.13.7.187 -p 12006 -n 10
##################################################
# declare host ip for redis according to SITE
SITE=$1
[[ "$SITE" == "nif" ]] && redis_host="10.3.14.38"
[[ "$SITE" == "prod" ]] && redis_host="10.3.8.133"
[[ "$SITE" == "sliv" ]] && redis_host="10.13.7.187"
jump="jump_$SITE"

farms=$(egrep ^" " /mnt/data/monitoring/structure.yml)

if [[ "$2" == "webtests" ]]; then
    cat /mnt/data/monitoring/web.yml
elif [[ "$2" == "farms" ]]; then
    echo "$farms"
elif [[ "$2" == "checks_count" ]]; then
    farm=$3
    if [[ "$farm" ]] && [[ "$farms" =~ "$farm" ]]; then
        checks_count=$(redis-cli -h $redis_host -p 12006 -n 10 KEYS "checks:*${farm}*" |wc -l)
    else
        # farm not specified, assume site check
        checks_count=$(redis-cli -h $redis_host -p 12006 -n 10 KEYS "checks:*" | egrep -v "$(echo $farms | sed 's/ /|/g')" |wc -l)
    fi
    echo $checks_count
elif [[ "$2" ]] && [[ "$farms" =~ "$2" ]]; then
    checks=$(redis-cli -h $redis_host -p 12006 -n 10 KEYS "checks:*${2}*" | sort)
    [[ "$checks" ]] && redis-cli -h $redis_host -p 12006 -n 10 DEL $checks &>/dev/null
    redis-cli -h $redis_host -p 12006 -n 10 PUBLISH "run_checks:main-$2" "run checks" &>/dev/null
    sleep 10
    checks=$(redis-cli -h $redis_host -p 12006 -n 10 KEYS "checks:*${2}*" | sort)
    # cut output to be less than 64k for Nagios to be able to use
    if [[ $3 -eq 0 ]]; then
        redis-cli -h $redis_host -p 12006 -n 10 MGET $checks | sed 's/\\n/\n/g'
    elif [[ $3 -eq 1 ]]; then
        redis-cli -h $redis_host -p 12006 -n 10 MGET $(echo "$checks"|grep "checks:[abcdefghijk]") | sed 's/\\n/\n/g'
    elif [[ $3 -eq 2 ]]; then
        redis-cli -h $redis_host -p 12006 -n 10 MGET $(echo "$checks"|grep "checks:[lmnopqrstuvwxyz]") | sed 's/\\n/\n/g'
    fi
else
    checks=$(redis-cli -h $redis_host -p 12006 -n 10 KEYS "checks:*" | egrep -v "$(echo $farms | sed 's/ /|/g')" | sort)
    [[ "$checks" ]] && redis-cli -h $redis_host -p 12006 -n 10 DEL $checks &>/dev/null
    redis-cli -h $redis_host -p 12006 -n 10 PUBLISH "run_checks:$jump" "run checks" &>/dev/null
    sleep 10
    checks=$(redis-cli -h $redis_host -p 12006 -n 10 KEYS "checks:*" | egrep -v "$(echo $farms | sed 's/ /|/g')" | sort)
    # cut output to be less than 64k for Nagios to be able to use
    if [[ $2 -eq 0 ]]; then
        redis-cli -h $redis_host -p 12006 -n 10 MGET $checks | sed 's/\\n/\n/g'
    elif [[ $2 -eq 1 ]]; then
        redis-cli -h $redis_host -p 12006 -n 10 MGET $(echo "$checks"|grep "checks:[abcdefghijk]") | sed 's/\\n/\n/g'
    elif [[ $2 -eq 2 ]]; then
        redis-cli -h $redis_host -p 12006 -n 10 MGET $(echo "$checks"|grep "checks:[lmnopqrstuvwxyz]") | sed 's/\\n/\n/g'
    fi

fi
